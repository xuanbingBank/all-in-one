name: CI/CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.0.2)'
        required: true
        type: string
      environment:
        description: '选择环境'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
        - development

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: 设置 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: 获取 pnpm store 目录
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 设置 pnpm 缓存
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: 安装依赖
        run: pnpm install
      
      - name: 更新版本号
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: release v${{ github.event.inputs.version }}"
          git tag "v${{ github.event.inputs.version }}"
      
      - name: 构建
        run: pnpm build
        env:
          NODE_ENV: ${{ github.event.inputs.environment }}
      
      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          files: |
            dist/*.upx
            release/**/*.exe
            release/**/*.dmg
            release/**/*.AppImage
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 推送更改
        run: |
          git push
          git push --tags